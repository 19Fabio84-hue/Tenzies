{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Tenzies\\\\src\\\\component\\\\main.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Die from './Die';\nimport { nanoid } from 'nanoid';\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [dice, setDice] = React.useState(Dice());\n  const [tenzies, setTenzies] = React.useState(false);\n  React.useEffect(() => {\n    const allTrue = dice.every(die => die.isHeld);\n    const firstValue = dice[0].value;\n    const allValue = dice.every(die => die.value === firstValue);\n    if (allTrue && allValue) {\n      setTenzies(true);\n    } else {}\n  }, [dice]);\n  function GenerateNewDice() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  function Dice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(GenerateNewDice());\n    }\n    return newDice;\n  }\n  function Roll() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(help => {\n        return help.isHeld ? help : GenerateNewDice();\n      }));\n    } else {\n      setTenzies(false);\n      setDice(Dice());\n    }\n  }\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(held => {\n      return held.id === id ? {\n        ...held,\n        isHeld: !held.isHeld\n      } : held;\n    }));\n  }\n  const elementDice = dice.map(pervDice => /*#__PURE__*/_jsxDEV(Die, {\n    toggle: () => holdDice(pervDice.id),\n    isHeld: pervDice.isHeld,\n    value: pervDice.value\n  }, pervDice.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-ctn\",\n      children: elementDice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Roll,\n      children: tenzies ? 'New Game' : 'Roll'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), tenzies && /*#__PURE__*/_jsxDEV(Confetti, {\n      width: 1900\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"fgj+z+dp56Xjiie4P4ktjwRytLE=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Die","nanoid","Confetti","Main","dice","setDice","useState","Dice","tenzies","setTenzies","useEffect","allTrue","every","die","isHeld","firstValue","value","allValue","GenerateNewDice","Math","ceil","random","id","newDice","i","push","Roll","oldDice","map","help","holdDice","prevDice","held","elementDice","pervDice"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Tenzies/src/component/main.js"],"sourcesContent":["import React from 'react'\r\nimport Die from './Die'\r\nimport { nanoid } from 'nanoid'\r\nimport Confetti from 'react-confetti'\r\n\r\nexport default function Main(){\r\n    const [dice ,setDice] = React.useState(Dice())\r\n    const [tenzies , setTenzies] = React.useState(false)\r\n\r\n    React.useEffect(()=>{\r\n      const allTrue = dice.every(die => die.isHeld)\r\n      const firstValue = dice[0].value\r\n      const allValue = dice.every(die => die.value === firstValue)\r\n      if(allTrue && allValue){\r\n        setTenzies(true)       \r\n      } else {\r\n        \r\n      }\r\n    },[dice])\r\n    \r\n    function GenerateNewDice(){\r\n        return {value:Math.ceil(Math.random()*6) , isHeld :false , id:nanoid()}\r\n    }\r\n    \r\n    function Dice(){\r\n        const newDice = []\r\n        for(let i = 0 ; i < 10 ; i++){\r\n          newDice.push(GenerateNewDice())\r\n          }\r\n        return newDice\r\n       }\r\n       function Roll(){        \r\n        if(!tenzies){\r\n          setDice(oldDice => oldDice.map(help => {return help.isHeld ? help : GenerateNewDice()}))\r\n        }else{\r\n          setTenzies(false)\r\n          setDice(Dice())\r\n        }\r\n       }\r\n     function holdDice(id){\r\n     setDice(prevDice => prevDice.map( held => {\r\n             return held.id === id ? {...held ,isHeld : !held.isHeld } : held})\r\n            )\r\n     }\r\n    const elementDice = dice.map(pervDice => <Die toggle={() =>holdDice(pervDice.id)}  isHeld={pervDice.isHeld} key={pervDice.id} value={pervDice.value} />)\r\n    return(\r\n        <main>\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\r\n          <div className='main-ctn'>\r\n            {elementDice}\r\n          </div> \r\n          <button onClick={Roll}>{tenzies ? 'New Game' : 'Roll'}</button>\r\n          {tenzies && <Confetti width={1900}/>}\r\n        </main>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}