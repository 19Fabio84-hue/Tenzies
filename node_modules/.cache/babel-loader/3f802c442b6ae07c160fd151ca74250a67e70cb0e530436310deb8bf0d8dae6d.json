{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTENTE\\\\Desktop\\\\Scrimba\\\\React\\\\Note\\\\src\\\\component\\\\main.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Die from './Die';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [dice, setDice] = React.useState(Dice());\n  const [tenzies, setTenzies] = React.useState(false);\n  React.useEffect(() => {\n    dice.value === dice.value ? setTenzies(true) : '';\n  }, [dice]);\n  function GenerateNewDice() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n  function Dice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(GenerateNewDice());\n    }\n    return newDice;\n  }\n  function Roll() {\n    setDice(oldDice => oldDice.map(help => {\n      return help.isHeld ? help : GenerateNewDice();\n    }));\n  }\n  function holdDice(id) {\n    setDice(prevDice => prevDice.map(held => {\n      return held.id === id ? {\n        ...held,\n        isHeld: !held.isHeld\n      } : held;\n    }));\n  }\n  const elementDice = dice.map(pervDice => /*#__PURE__*/_jsxDEV(Die, {\n    toggle: () => holdDice(pervDice.id),\n    isHeld: pervDice.isHeld,\n    value: pervDice.value\n  }, pervDice.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-ctn\",\n      children: elementDice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Roll(dice.id),\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"fgj+z+dp56Xjiie4P4ktjwRytLE=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Die","nanoid","Main","dice","setDice","useState","Dice","tenzies","setTenzies","useEffect","value","GenerateNewDice","Math","ceil","random","isHeld","id","newDice","i","push","Roll","oldDice","map","help","holdDice","prevDice","held","elementDice","pervDice"],"sources":["C:/Users/UTENTE/Desktop/Scrimba/React/Note/src/component/main.js"],"sourcesContent":["import React from 'react'\r\nimport Die from './Die'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function Main(){\r\n    const [dice ,setDice] = React.useState(Dice())\r\n    const [tenzies , setTenzies] = React.useState(false)\r\n    React.useEffect(()=>{\r\n      dice.value === dice.value ? setTenzies(true) : ''\r\n    },[dice])\r\n    function GenerateNewDice(){\r\n        return {value:Math.ceil(Math.random()*6) , isHeld :false , id:nanoid()}\r\n    }\r\n    \r\n    function Dice(){\r\n        const newDice = []\r\n        for(let i = 0 ; i < 10 ; i++){\r\n          newDice.push(GenerateNewDice())\r\n          }\r\n        return newDice\r\n       }\r\n       function Roll(){        \r\n        setDice(oldDice => oldDice.map(help => {return help.isHeld ? help : GenerateNewDice()}))\r\n       }\r\n     function holdDice(id){\r\n     setDice(prevDice => prevDice.map( held => {\r\n             return held.id === id ? {...held ,isHeld : !held.isHeld } : held})\r\n            )\r\n     }\r\n    const elementDice = dice.map(pervDice => <Die toggle={() =>holdDice(pervDice.id)}  isHeld={pervDice.isHeld} key={pervDice.id} value={pervDice.value} />)\r\n    return(\r\n        <main>\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\r\n          <div className='main-ctn'>\r\n            {elementDice}\r\n          </div> \r\n          <button onClick={()=>Roll(dice.id)}>Roll</button>\r\n        </main>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAE/B,eAAe,SAASC,IAAI,GAAE;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAACC,IAAI,EAAE,CAAC;EAC9C,MAAM,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGT,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;EACpDN,KAAK,CAACU,SAAS,CAAC,MAAI;IAClBN,IAAI,CAACO,KAAK,KAAKP,IAAI,CAACO,KAAK,GAAGF,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE;EACnD,CAAC,EAAC,CAACL,IAAI,CAAC,CAAC;EACT,SAASQ,eAAe,GAAE;IACtB,OAAO;MAACD,KAAK,EAACE,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,CAAC,CAAC;MAAGC,MAAM,EAAE,KAAK;MAAGC,EAAE,EAACf,MAAM;IAAE,CAAC;EAC3E;EAEA,SAASK,IAAI,GAAE;IACX,MAAMW,OAAO,GAAG,EAAE;IAClB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAG,EAAE,EAAGA,CAAC,EAAE,EAAC;MAC3BD,OAAO,CAACE,IAAI,CAACR,eAAe,EAAE,CAAC;IAC/B;IACF,OAAOM,OAAO;EACf;EACA,SAASG,IAAI,GAAE;IACdhB,OAAO,CAACiB,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI;MAAC,OAAOA,IAAI,CAACR,MAAM,GAAGQ,IAAI,GAAGZ,eAAe,EAAE;IAAA,CAAC,CAAC,CAAC;EACzF;EACF,SAASa,QAAQ,CAACR,EAAE,EAAC;IACrBZ,OAAO,CAACqB,QAAQ,IAAIA,QAAQ,CAACH,GAAG,CAAEI,IAAI,IAAI;MAClC,OAAOA,IAAI,CAACV,EAAE,KAAKA,EAAE,GAAG;QAAC,GAAGU,IAAI;QAAEX,MAAM,EAAG,CAACW,IAAI,CAACX;MAAO,CAAC,GAAGW,IAAI;IAAA,CAAC,CAAC,CAClE;EACR;EACD,MAAMC,WAAW,GAAGxB,IAAI,CAACmB,GAAG,CAACM,QAAQ,iBAAI,QAAC,GAAG;IAAC,MAAM,EAAE,MAAKJ,QAAQ,CAACI,QAAQ,CAACZ,EAAE,CAAE;IAAE,MAAM,EAAEY,QAAQ,CAACb,MAAO;IAAmB,KAAK,EAAEa,QAAQ,CAAClB;EAAM,GAAnCkB,QAAQ,CAACZ,EAAE;IAAA;IAAA;IAAA;EAAA,QAA2B,CAAC;EACxJ,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,OAAO;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAClC;MAAG,SAAS,EAAC,cAAc;MAAA,UAAC;IAAiG;MAAA;MAAA;MAAA;IAAA,QAAI,eACnI;MAAK,SAAS,EAAC,UAAU;MAAA,UACtBW;IAAW;MAAA;MAAA;MAAA;IAAA,QACR,eACN;MAAQ,OAAO,EAAE,MAAIP,IAAI,CAACjB,IAAI,CAACa,EAAE,CAAE;MAAA,UAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEf;AAAC,GApCuBd,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}